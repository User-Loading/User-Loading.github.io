name: Check Pi-hole Blocklist Domains
 
on:
  push:
    paths:
      - 'blocklist.txt'
  workflow_dispatch:  # Manual trigger for testing
 
jobs:
  check-domains:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
 
      - name: Check domains with bash
        run: |
          echo "üîç Checking domains in blocklist.txt"
 
          if [ ! -f "blocklist.txt" ]; then
              echo "‚ùå blocklist.txt not found!"
              exit 1
          fi
 
          # Read domains, skip comments and empty lines
          domains=$(grep -v '^#' blocklist.txt | grep -v '^$' | grep -v '^!' | sed 's/[[:space:]]*$//')
          total_domains=$(echo "$domains" | wc -l)
 
          echo "üìä Testing $total_domains domains..."
 
          # Initialize files
          > working.txt
          > dead.txt
 
          working_count=0
          dead_count=0
          processed=0
 
          # Check each domain
          while IFS= read -r domain; do
              [ -z "$domain" ] && continue
              processed=$((processed + 1))
 
              # Use dig with timeout to check if domain resolves
              if timeout 5 dig +short "$domain" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' > /dev/null 2>&1; then
                  echo "$domain" >> working.txt
                  working_count=$((working_count + 1))
 
                  # Show progress every 100 working domains
                  if [ $((working_count % 100)) -eq 0 ]; then
                      echo "‚úÖ Progress: $working_count working, $dead_count dead (Total: $processed/$total_domains)"
                  fi
              else
                  echo "$domain" >> dead.txt
                  echo "‚ùå Dead: $domain"
                  dead_count=$((dead_count + 1))
              fi
 
          done <<< "$domains"
 
          # Calculate percentages
          working_pct=$((working_count * 100 / total_domains))
          dead_pct=$((dead_count * 100 / total_domains))
 
          # Results summary
          echo ""
          echo "üìà FINAL RESULTS:"
          echo "Total domains: $total_domains"
          echo "Working domains: $working_count ($working_pct%)"
          echo "Dead domains: $dead_count ($dead_pct%)"
          echo ""
          echo "Results saved to:"
          echo "- working.txt ($working_count domains)"
          echo "- dead.txt ($dead_count domains)"
 
          # Create summary report
          cat > domain-check-summary.md << EOF
          ## üîç Domain Check Results
 
          **Triggered by:** Changes to blocklist.txt
          **Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')
 
          ### Summary
          - **Total domains tested:** $total_domains
          - **Working domains:** $working_count ($working_pct%)
          - **Dead domains:** $dead_count ($dead_pct%)
 
          ### Files Updated
          - ‚úÖ \`working.txt\` - $working_count working domains
          - ‚ùå \`dead.txt\` - $dead_count dead domains
 
          $(if [ $dead_pct -gt 15 ]; then
              echo "### ‚ö†Ô∏è Warning"
              echo "High number of dead domains detected! Consider reviewing the blocklist."
          else
              echo "### ‚úÖ Status"
              echo "Domain health looks good!"
          fi)
          EOF
 
          # Set environment variables for later steps
          echo "TOTAL_DOMAINS=$total_domains" >> $GITHUB_ENV
          echo "DEAD_COUNT=$dead_count" >> $GITHUB_ENV
          echo "DEAD_PCT=$dead_pct" >> $GITHUB_ENV
 
      - name: Commit results back to repo
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add working.txt dead.txt domain-check-summary.md
 
          if ! git diff --staged --quiet; then
              git commit -m "ü§ñ Update domain status files
 
              - Updated working.txt and dead.txt
              - Checked ${{ env.TOTAL_DOMAINS }} domains from blocklist.txt
              - Generated domain-check-summary.md"
              git push
          else
              echo "No changes to commit"
          fi
 
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: domain-check-results
          path: |
            working.txt
            dead.txt
            domain-check-summary.md
          retention-days: 30
 
      - name: Create issue if too many dead domains
        if: env.DEAD_PCT > 15
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('domain-check-summary.md', 'utf8');
 
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `‚ö†Ô∏è High dead domain count: ${{ env.DEAD_COUNT }} domains (${{ env.DEAD_PCT }}%)`,
              body: summary,
              labels: ['blocklist', 'maintenance', 'high-priority']
            });
